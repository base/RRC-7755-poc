// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/base-org/RRC-7755-poc/internal/prover/l1_state_prover (interfaces: L1Client)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	big "math/big"
	reflect "reflect"

	types "github.com/ethereum/go-ethereum/core/types"
	gomock "github.com/golang/mock/gomock"
)

// MockL1Client is a mock of L1Client interface.
type MockL1Client struct {
	ctrl     *gomock.Controller
	recorder *MockL1ClientMockRecorder
}

// MockL1ClientMockRecorder is the mock recorder for MockL1Client.
type MockL1ClientMockRecorder struct {
	mock *MockL1Client
}

// NewMockL1Client creates a new mock instance.
func NewMockL1Client(ctrl *gomock.Controller) *MockL1Client {
	mock := &MockL1Client{ctrl: ctrl}
	mock.recorder = &MockL1ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockL1Client) EXPECT() *MockL1ClientMockRecorder {
	return m.recorder
}

// BlockByNumber mocks base method.
func (m *MockL1Client) BlockByNumber(arg0 context.Context, arg1 *big.Int) (*types.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BlockByNumber", arg0, arg1)
	ret0, _ := ret[0].(*types.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BlockByNumber indicates an expected call of BlockByNumber.
func (mr *MockL1ClientMockRecorder) BlockByNumber(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BlockByNumber", reflect.TypeOf((*MockL1Client)(nil).BlockByNumber), arg0, arg1)
}
